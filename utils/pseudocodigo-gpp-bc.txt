x = getPenultimatePosition([3, 8.2, 2, 55.5]) // x = 2
{
    aux = 3;
    res = NULL; -> primera iteracion
    res = aux -> a partir de la segunda iteracion
    return res;
}


x = 3 // asignaciones a fines de entender los ejemplos
y = binaryCount([110,1,0,5,x,10101100,-1])  // y = 4
{
    count = 0; -> primera iteracion
    flag = 1;
    int aux = 110; 

    while (aux > 1) { 
        int res = aux % 10; 
        if (res != 0 & res != 1) {
            flag = 0;
        }
        aux /= 10;
    }
    if(flag == 1)
        count = count + 1;
    
    return count
}




aux = valor inicial //120
count = 0
pot = 1

mientras pot <= aux hacer:
    pot = pot * 10 //1000
fin mientras

mientras pot > 1 hacer:
    pot = pot / 10 //100
    res = aux / pot  //12                    ; Obtener el dígito más significativo
    aux = aux - (res * pot)    //0             ; Reducir el número
    si res cumple condición:
        count = count + 1       
    fin si
fin mientras

resultado = count